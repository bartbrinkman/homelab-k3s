apiVersion: helm.toolkit.fluxcd.io/v2beta1  
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 1m
  timeout: 30m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 14.0.1
      sourceRef:
        kind: HelmRepository
        name: kube-prometheus-stack
        namespace: default      
  values:
    defaultRules:
      create: false
      rules:
        alertmanager: false
        etcd: false
        general: true
        k8s: true
        kubeApiserver: false
        kubeApiserverAvailability: false
        kubeApiserverError: false
        kubeApiserverSlos: false
        kubelet: false
        kubePrometheusGeneral: false
        kubePrometheusNodeAlerting: false
        kubePrometheusNodeRecording: false
        kubernetesAbsent: false
        kubernetesApps: false
        kubernetesResources: false
        kubernetesStorage: false
        kubernetesSystem: false
        kubeScheduler: false
        kubeStateMetrics: false
        network: false
        node: false
        prometheus: true
        prometheusOperator: true
        time: true

    alertmanager:
      enabled: false

    grafana:
      ingress:
        enabled: true
        annotations: 
          kubernetes.io/ingress.class: traefik
          cert-manager.io/cluster-issuer: letsencrypt
        hosts:
          - grafana.k3s.bartbrinkman.nl
        tls:
          - secretName: grafana-k3s-bartbrinkman-nl-tls
            hosts:
              - grafana.k3s.bartbrinkman.nl
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: node-role.kubernetes.io/master
                  operator: DoesNotExist
    
    prometheus:
      prometheusSpec:
        scrapeInterval: 30s
        resources:
          limits: 
            memory: 1536Mi
        storageSpec: 
          volumeClaimTemplate:
            spec:
              storageClassName: managed-nfs-storage
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 50Gi
        retention: 30d
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: DoesNotExist

    prometheusOperator:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: node-role.kubernetes.io/master
                  operator: DoesNotExist
                                
